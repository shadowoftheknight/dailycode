{
  "version": 4,
  "terraform_version": "1.0.8",
  "serial": 68,
  "lineage": "5bfa0f83-dafa-020d-a3e5-c59f0018abbb",
  "outputs": {
    "ip": {
      "value": "34.145.106.174",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-9-stretch-v20210916",
                    "labels": {},
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/zones/us-west1-a/disks/flask-vm-24f222c11a186ca6"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/white-rabbit-328319/zones/us-west1-a/instances/flask-vm-24f222c11a186ca6",
            "instance_id": "4043317314145856777",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": {},
            "machine_type": "f1-micro",
            "metadata": {},
            "metadata_fingerprint": "VUBqSeOMxVI=",
            "metadata_startup_script": "sudo apt-get update; sudo apt-get install -yq build-essential python-pip rsync; pip install flask",
            "min_cpu_platform": "",
            "name": "flask-vm-24f222c11a186ca6",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.145.106.174",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/default",
                "network_ip": "10.138.0.4",
                "nic_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/subnetworks/default",
                "subnetwork_project": "white-rabbit-328319"
              }
            ],
            "project": "white-rabbit-328319",
            "reservation_affinity": [],
            "resource_policies": [],
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/zones/us-west1-a/instances/flask-vm-24f222c11a186ca6",
            "service_account": [],
            "shielded_instance_config": [],
            "tags": [],
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "us-west1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "random_id.instance_id"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "instance_id",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "JPIiwRoYbKY=",
            "b64_url": "JPIiwRoYbKY",
            "byte_length": 8,
            "dec": "2662228542491225254",
            "hex": "24f222c11a186ca6",
            "id": "JPIiwRoYbKY",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "data",
      "type": "google_compute_lb_ip_ranges",
      "name": "ranges",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_ssl_tcp_internal": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "id": "compute-lb-ip-ranges",
            "network": [
              "209.85.152.0/22",
              "209.85.204.0/22",
              "35.191.0.0/16"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_address",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": "34.83.113.229",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2021-10-24T02:08:28.989-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/addresses/vault-lb",
            "name": "vault-lb",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "white-rabbit-328319",
            "purpose": "",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/addresses/vault-lb",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_address",
      "name": "vault-nat",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": "35.247.104.87",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2021-10-24T02:08:27.856-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-0",
            "name": "vault-nat-external-0",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "white-rabbit-328319",
            "purpose": "",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-0",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vault.google_project_service.service"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "address": "34.82.11.104",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2021-10-24T02:08:28.086-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-1",
            "name": "vault-nat-external-1",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "white-rabbit-328319",
            "purpose": "",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-1",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-external",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8200"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-10-24T02:08:38.707-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/white-rabbit-328319/global/firewalls/vault-allow-external",
            "log_config": [],
            "name": "vault-allow-external",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "priority": 1000,
            "project": "white-rabbit-328319",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/firewalls/vault-allow-external",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-vault"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-internal",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8200-8201"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-10-24T02:08:38.993-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/white-rabbit-328319/global/firewalls/vault-allow-internal",
            "log_config": [],
            "name": "vault-allow-internal",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "priority": 1000,
            "project": "white-rabbit-328319",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/firewalls/vault-allow-internal",
            "source_ranges": [
              "10.127.0.0/20"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-lb-healthcheck",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "58200"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-10-24T02:08:39.393-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/white-rabbit-328319/global/firewalls/vault-allow-lb-healthcheck",
            "log_config": [],
            "name": "vault-allow-lb-healthcheck",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "priority": 1000,
            "project": "white-rabbit-328319",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/firewalls/vault-allow-lb-healthcheck",
            "source_ranges": [
              "130.211.0.0/22",
              "209.85.152.0/22",
              "209.85.204.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-vault"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.data.google_compute_lb_ip_ranges.ranges",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-ssh",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-10-24T02:08:38.935-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/white-rabbit-328319/global/firewalls/vault-allow-ssh",
            "log_config": [],
            "name": "vault-allow-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "priority": 1000,
            "project": "white-rabbit-328319",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/firewalls/vault-allow-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-ssh"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vault-network",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/white-rabbit-328319/global/networks/vault-network",
            "mtu": 0,
            "name": "vault-network",
            "project": "white-rabbit-328319",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_router",
      "name": "vault-router",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bgp": [
              {
                "advertise_mode": "DEFAULT",
                "advertised_groups": null,
                "advertised_ip_ranges": [],
                "asn": 64514
              }
            ],
            "creation_timestamp": "2021-10-24T02:08:39.009-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/routers/vault-router",
            "name": "vault-router",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/routers/vault-router",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_router_nat",
      "name": "vault-nat",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "drain_nat_ips": null,
            "enable_endpoint_independent_mapping": true,
            "icmp_idle_timeout_sec": 30,
            "id": "white-rabbit-328319/us-west1/vault-router/vault-nat-1",
            "log_config": [],
            "min_ports_per_vm": 0,
            "name": "vault-nat-1",
            "nat_ip_allocate_option": "MANUAL_ONLY",
            "nat_ips": [
              "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-0",
              "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/addresses/vault-nat-external-1"
            ],
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "router": "vault-router",
            "source_subnetwork_ip_ranges_to_nat": "LIST_OF_SUBNETWORKS",
            "subnetwork": [
              {
                "name": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/subnetworks/vault-subnet",
                "secondary_ip_range_names": [],
                "source_ip_ranges_to_nat": [
                  "PRIMARY_IP_RANGE"
                ]
              }
            ],
            "tcp_established_idle_timeout_sec": 1200,
            "tcp_transitory_idle_timeout_sec": 30,
            "timeouts": null,
            "udp_idle_timeout_sec": 30
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault-nat",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_router.vault-router",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "vault-subnet",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2021-10-24T02:08:40.346-07:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.127.0.1",
            "id": "projects/white-rabbit-328319/regions/us-west1/subnetworks/vault-subnet",
            "ip_cidr_range": "10.127.0.0/20",
            "log_config": [],
            "name": "vault-subnet",
            "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "white-rabbit-328319",
            "purpose": "PRIVATE",
            "region": "us-west1",
            "role": "",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/subnetworks/vault-subnet",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_project_service",
      "name": "service",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "cloudkms.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/cloudkms.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "cloudkms.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "cloudresourcemanager.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/cloudresourcemanager.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "cloudresourcemanager.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "compute.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/compute.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "compute.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "iam.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/iam.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "iam.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "logging.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/logging.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "logging.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "monitoring.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "white-rabbit-328319/monitoring.googleapis.com",
            "project": "white-rabbit-328319",
            "service": "monitoring.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_service_account",
      "name": "vault-admin",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "vault-admin",
            "description": "",
            "disabled": false,
            "display_name": "Vault Admin",
            "email": "vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "id": "projects/white-rabbit-328319/serviceAccounts/vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "name": "projects/white-rabbit-328319/serviceAccounts/vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "project": "white-rabbit-328319",
            "timeouts": null,
            "unique_id": "109126415832357941969"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": false,
            "id": "white-rabbit-328319-vault-data",
            "labels": null,
            "lifecycle_rule": [],
            "location": "US",
            "logging": [],
            "name": "white-rabbit-328319-vault-data",
            "project": "white-rabbit-328319",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/white-rabbit-328319-vault-data",
            "storage_class": "MULTI_REGIONAL",
            "uniform_bucket_level_access": false,
            "url": "gs://white-rabbit-328319-vault-data",
            "versioning": [
              {
                "enabled": false
              }
            ],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "google_compute_zones",
      "name": "available",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/white-rabbit-328319/regions/us-west1",
            "names": [
              "us-west1-a",
              "us-west1-b",
              "us-west1-c"
            ],
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "template_file",
      "name": "vault-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "77d318b7fcd5b61ba40fce370442b7990dd6512efdcfacea8ce44c508441f8e7",
            "rendered": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\r\n# have this set.\r\napi_addr     = \"https://34.83.113.229:8200\"\r\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\r\ncluster_addr = \"https://LOCAL_IP:8201\"\r\n\r\n# Set debugging level\r\nlog_level = \"warn\"\r\n\r\n# Enable the UI\r\nui = true\r\n\r\n# Enable plugin directory\r\nplugin_directory = \"/etc/vault.d/plugins\"\r\n\r\n# Enable auto-unsealing with Google Cloud KMS\r\nseal \"gcpckms\" {\r\n  project    = \"white-rabbit-328319\"\r\n  region     = \"us-west1\"\r\n  key_ring   = \"zion\"\r\n  crypto_key = \"matrix-one\"\r\n}\r\n\r\n# Enable HA backend storage with GCS\r\nstorage \"gcs\" {\r\n  bucket     = \"white-rabbit-328319-vault-data\"\r\n  ha_enabled = \"true\"\r\n}\r\n\r\n# Create local non-TLS listener\r\nlistener \"tcp\" {\r\n  address     = \"127.0.0.1:8200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\r\n# firewall doesn't allow traffic to this port except from the probe IP range.\r\nlistener \"tcp\" {\r\n  address     = \"34.83.113.229:58200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create an mTLS listener on the load balancer address\r\nlistener \"tcp\" {\r\n  address            = \"34.83.113.229:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\r\n# but not all clients are well-behaved. This is also needed so the cluster\r\n# nodes can communicate with each other.\r\nlistener \"tcp\" {\r\n  address            = \"LOCAL_IP:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Send data to statsd (Stackdriver monitoring)\r\ntelemetry {\r\n  statsd_address   = \"127.0.0.1:8125\"\r\n  disable_hostname = true\r\n}\r\n",
            "template": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\r\n# have this set.\r\napi_addr     = \"${api_addr}\"\r\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\r\ncluster_addr = \"https://LOCAL_IP:8201\"\r\n\r\n# Set debugging level\r\nlog_level = \"${vault_log_level}\"\r\n\r\n# Enable the UI\r\nui = ${vault_ui_enabled == \"true\" ? true : false}\r\n\r\n# Enable plugin directory\r\nplugin_directory = \"/etc/vault.d/plugins\"\r\n\r\n# Enable auto-unsealing with Google Cloud KMS\r\nseal \"gcpckms\" {\r\n  project    = \"${kms_project}\"\r\n  region     = \"${kms_location}\"\r\n  key_ring   = \"${kms_keyring}\"\r\n  crypto_key = \"${kms_crypto_key}\"\r\n}\r\n\r\n# Enable HA backend storage with GCS\r\nstorage \"gcs\" {\r\n  bucket     = \"${storage_bucket}\"\r\n  ha_enabled = \"true\"\r\n}\r\n\r\n# Create local non-TLS listener\r\nlistener \"tcp\" {\r\n  address     = \"127.0.0.1:${vault_port}\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\r\n# firewall doesn't allow traffic to this port except from the probe IP range.\r\nlistener \"tcp\" {\r\n  address     = \"${lb_ip}:${vault_proxy_port}\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create an mTLS listener on the load balancer address\r\nlistener \"tcp\" {\r\n  address            = \"${lb_ip}:${vault_port}\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"${vault_tls_disable_client_certs}\"\r\n  tls_require_and_verify_client_cert = \"${vault_tls_require_and_verify_client_cert}\"\r\n}\r\n\r\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\r\n# but not all clients are well-behaved. This is also needed so the cluster\r\n# nodes can communicate with each other.\r\nlistener \"tcp\" {\r\n  address            = \"LOCAL_IP:${vault_port}\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"${vault_tls_disable_client_certs}\"\r\n  tls_require_and_verify_client_cert = \"${vault_tls_require_and_verify_client_cert}\"\r\n}\r\n\r\n# Send data to statsd (Stackdriver monitoring)\r\ntelemetry {\r\n  statsd_address   = \"127.0.0.1:8125\"\r\n  disable_hostname = true\r\n}\r\n",
            "vars": {
              "api_addr": "https://34.83.113.229:8200",
              "kms_crypto_key": "matrix-one",
              "kms_keyring": "zion",
              "kms_location": "us-west1",
              "kms_project": "white-rabbit-328319",
              "lb_ip": "34.83.113.229",
              "storage_bucket": "white-rabbit-328319-vault-data",
              "vault_log_level": "warn",
              "vault_port": "8200",
              "vault_proxy_port": "58200",
              "vault_tls_disable_client_certs": "false",
              "vault_tls_require_and_verify_client_cert": "false",
              "vault_ui_enabled": "true"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "template_file",
      "name": "vault-startup-script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "dbcd7a07d5dc5899cb495ffe1ec0bceaa1a8c3bef69949764fd0b0d7aea99834",
            "rendered": "#! /usr/bin/env bash\r\nset -xe\r\nset -o pipefail\r\n\r\n# Only run the script once\r\nif [ -f ~/.startup-script-complete ]; then\r\n  echo \"Startup script already ran, exiting\"\r\n  exit 0\r\nfi\r\n\r\n# Data\r\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\r\n\r\n# Allow users to specify an HTTP proxy for egress instead of a NAT\r\nif [ ! -z '' ]; then\r\n  export http_proxy=\r\n  export https_proxy=$http_proxy\r\nfi\r\n\r\n# Get Vault up and running as quickly as possible to get the auto-heal health\r\n# check passing.  This results in faster recovery and faster rolling upgrades.\r\n\r\n# Deps\r\nexport DEBIAN_FRONTEND=noninteractive\r\n\r\n# Download and install Vault\r\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_linux_amd64.zip\"\r\n# Unzip without having to apt install unzip\r\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\r\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\r\nrm /tmp/vault.zip /tmp/vault\r\n\r\n# Give Vault the ability to run mlock as non-root\r\nif ! [[ -x /sbin/setcap ]]; then\r\n  apt install -qq -y libcap2-bin\r\nfi\r\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\r\n\r\n# Add Vault user\r\nuseradd -d /etc/vault.d -s /bin/false vault\r\n\r\n# Vault config\r\nmkdir -p /etc/vault.d\r\nmkdir /etc/vault.d/plugins\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\r\n# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\r\n# have this set.\r\napi_addr     = \"https://34.83.113.229:8200\"\r\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\r\ncluster_addr = \"https://LOCAL_IP:8201\"\r\n\r\n# Set debugging level\r\nlog_level = \"warn\"\r\n\r\n# Enable the UI\r\nui = true\r\n\r\n# Enable plugin directory\r\nplugin_directory = \"/etc/vault.d/plugins\"\r\n\r\n# Enable auto-unsealing with Google Cloud KMS\r\nseal \"gcpckms\" {\r\n  project    = \"white-rabbit-328319\"\r\n  region     = \"us-west1\"\r\n  key_ring   = \"zion\"\r\n  crypto_key = \"matrix-one\"\r\n}\r\n\r\n# Enable HA backend storage with GCS\r\nstorage \"gcs\" {\r\n  bucket     = \"white-rabbit-328319-vault-data\"\r\n  ha_enabled = \"true\"\r\n}\r\n\r\n# Create local non-TLS listener\r\nlistener \"tcp\" {\r\n  address     = \"127.0.0.1:8200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\r\n# firewall doesn't allow traffic to this port except from the probe IP range.\r\nlistener \"tcp\" {\r\n  address     = \"34.83.113.229:58200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create an mTLS listener on the load balancer address\r\nlistener \"tcp\" {\r\n  address            = \"34.83.113.229:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\r\n# but not all clients are well-behaved. This is also needed so the cluster\r\n# nodes can communicate with each other.\r\nlistener \"tcp\" {\r\n  address            = \"LOCAL_IP:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Send data to statsd (Stackdriver monitoring)\r\ntelemetry {\r\n  statsd_address   = \"127.0.0.1:8125\"\r\n  disable_hostname = true\r\n}\r\n\r\nEOF\r\nchmod 0600 /etc/vault.d/config.hcl\r\n\r\n# Sub in local IP\r\n# $$ is correct here because we are in terraform template\r\nsed -i \"s/LOCAL_IP/${LOCAL_IP}/g\" /etc/vault.d/config.hcl\r\n\r\n# Service environment\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\r\nVAULT_ARGS=\r\nEOF\r\nchmod 0600 /etc/vault.d/vault.env\r\n\r\n# Download TLS files from GCS\r\nmkdir -p /etc/vault.d/tls\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/ca.crt\" /etc/vault.d/tls/ca.crt\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/vault.crt\" /etc/vault.d/tls/vault.crt\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/vault.key.enc\" /etc/vault.d/tls/vault.key.enc\r\n\r\n# Decrypt the Vault private key\r\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\r\n  --project=\"white-rabbit-328319\" \\\r\n  --key=\"projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one\" \\\r\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\r\n  --ciphertext-file=-\r\n\r\n# Make sure Vault owns everything\r\nchmod 700 /etc/vault.d/tls\r\nchmod 600 /etc/vault.d/tls/vault.key\r\nchown -R vault:vault /etc/vault.d\r\nrm /etc/vault.d/tls/vault.key.enc\r\n\r\n# Make audit files\r\nmkdir -p /var/log/vault\r\ntouch /var/log/vault/{audit,server}.log\r\nchmod 0640 /var/log/vault/{audit,server}.log\r\nchown -R vault:adm /var/log/vault\r\n\r\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\r\n# handshakes\r\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\r\nupdate-ca-certificates\r\n\r\n# Systemd service\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\r\n[Unit]\r\nDescription=\"HashiCorp Vault\"\r\nDocumentation=https://www.vaultproject.io/docs/\r\nRequires=network-online.target\r\nAfter=network-online.target\r\n# Stop after the shutdown script stops.\r\nBefore=google-shutdown-scripts.service\r\nConditionFileNotEmpty=/etc/vault.d/config.hcl\r\n\r\n[Service]\r\nUser=vault\r\nGroup=vault\r\nProtectSystem=full\r\nProtectHome=read-only\r\nPrivateTmp=yes\r\nPrivateDevices=yes\r\nSecureBits=keep-caps\r\nStandardError=syslog\r\nStandardOutput=syslog\r\nSyslogIdentifier=vault\r\nAmbientCapabilities=CAP_IPC_LOCK\r\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\r\nNoNewPrivileges=yes\r\nEnvironmentFile=/etc/vault.d/vault.env\r\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\r\nExecReload=/bin/kill --signal HUP $MAINPID\r\nKillMode=process\r\nKillSignal=SIGINT\r\nRestart=on-failure\r\nRestartSec=5\r\nTimeoutStopSec=30\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\nchmod 0644 /etc/systemd/system/vault.service\r\nsystemctl daemon-reload\r\nsystemctl enable vault\r\nsystemctl start vault\r\n\r\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\r\n\r\n# Prevent core dumps - from all attack vectors\r\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\r\nkernel.core_pattern=|/bin/false\r\nEOF\r\nsysctl -p /etc/sysctl.d/50-coredump.conf\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\r\n* hard core 0\r\nEOF\r\n\r\nmkdir -p /etc/systemd/coredump.conf.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\r\n[Coredump]\r\nStorage=none\r\nEOF\r\n\r\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\r\nfs.suid_dumpable = 0\r\nEOF\r\nsysctl -p\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\r\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\r\nEOF\r\nsource /etc/profile.d/ulimit.sh\r\n\r\n# Reload any systemd changes for core dumps\r\nsystemctl daemon-reload\r\n\r\n# Setup vault env\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\r\nexport VAULT_ADDR=\"http://127.0.0.1:8200\"\r\n\r\n# Ignore history from any Vault commands\r\nexport HISTIGNORE=\"\u0026:vault*\"\r\nEOF\r\nchmod 644 /etc/profile.d/vault.sh\r\nsource /etc/profile.d/vault.sh\r\n\r\n# Pull Vault data from syslog into a file for fluentd\r\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\r\n#\r\n# Extract Vault logs from syslog\r\n#\r\n\r\n# Only include the message (Vault has its own timestamps and data)\r\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\r\n\r\nif ( $programname == \"vault\" ) then {\r\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\r\n  stop\r\n}\r\nEOF\r\nsystemctl restart rsyslog\r\n\r\n# Install Stackdriver for logging and monitoring\r\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\r\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\r\napt-get update -yqq\r\n# Install structured logs\r\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\r\n\r\n# Start Stackdriver logging agent and setup the filesystem to be ready to\r\n# receive audit logs\r\nmkdir -p /etc/google-fluentd/config.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\r\n\u003csource\u003e\r\n  @type tail\r\n  format json\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/audit.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\r\n  read_from_head true\r\n  tag vaultproject.io/audit\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/audit\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"${record.dig('request', 'id') || '-'} ${record.dig('request', 'remote_address') || '-'} ${record.dig('auth', 'display_name') || '-'} ${record.dig('request', 'operation') || '-'} ${record.dig('request', 'path') || '-'}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\n\r\n\u003csource\u003e\r\n  @type tail\r\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/server.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\r\n  read_from_head true\r\n  tag vaultproject.io/server\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/server\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"${record['source']}: ${record['message']}\"\r\n    severity \"${(record['severity'] || '').downcase}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\nEOF\r\nsystemctl enable google-fluentd\r\nsystemctl restart google-fluentd\r\n\r\n# Install logrotate\r\napt-get install -yqq logrotate\r\n\r\n# Configure logrotate for Vault audit logs\r\nmkdir -p /etc/logrotate.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\r\n/var/log/vault/*.log {\r\n  daily\r\n  rotate 3\r\n  missingok\r\n  compress\r\n  notifempty\r\n  create 0640 vault adm\r\n  sharedscripts\r\n  postrotate\r\n    /bin/systemctl reload vault 2\u003e /dev/null\r\n    true\r\n  endscript\r\n}\r\nEOF\r\n\r\n# Start Stackdriver monitoring\r\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\r\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\r\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\r\n\r\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\r\n# by default and generates frequent error messages trying to divide by zero\r\n# when there is no swap.  This perl command is an in-place edit to disable the\r\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\r\n# having to filter them in stackdriver.\r\n#\r\n# The error string related to this is:\r\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\r\n# See https://issuetracker.google.com/issues/161054680#comment5\r\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\r\n\r\nsystemctl enable stackdriver-agent\r\nservice stackdriver-agent restart\r\n\r\n#########################################\r\n##          user_startup_script        ##\r\n#########################################\r\n\r\n\r\n# Signal this script has run\r\ntouch ~/.startup-script-complete\r\n",
            "template": "#! /usr/bin/env bash\r\nset -xe\r\nset -o pipefail\r\n\r\n# Only run the script once\r\nif [ -f ~/.startup-script-complete ]; then\r\n  echo \"Startup script already ran, exiting\"\r\n  exit 0\r\nfi\r\n\r\n# Data\r\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\r\n\r\n# Allow users to specify an HTTP proxy for egress instead of a NAT\r\nif [ ! -z '${custom_http_proxy}' ]; then\r\n  export http_proxy=${custom_http_proxy}\r\n  export https_proxy=$http_proxy\r\nfi\r\n\r\n# Get Vault up and running as quickly as possible to get the auto-heal health\r\n# check passing.  This results in faster recovery and faster rolling upgrades.\r\n\r\n# Deps\r\nexport DEBIAN_FRONTEND=noninteractive\r\n\r\n# Download and install Vault\r\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/${vault_version}/vault_${vault_version}_linux_amd64.zip\"\r\n# Unzip without having to apt install unzip\r\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\r\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\r\nrm /tmp/vault.zip /tmp/vault\r\n\r\n# Give Vault the ability to run mlock as non-root\r\nif ! [[ -x /sbin/setcap ]]; then\r\n  apt install -qq -y libcap2-bin\r\nfi\r\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\r\n\r\n# Add Vault user\r\nuseradd -d /etc/vault.d -s /bin/false vault\r\n\r\n# Vault config\r\nmkdir -p /etc/vault.d\r\nmkdir /etc/vault.d/plugins\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\r\n${config}\r\nEOF\r\nchmod 0600 /etc/vault.d/config.hcl\r\n\r\n# Sub in local IP\r\n# $$ is correct here because we are in terraform template\r\nsed -i \"s/LOCAL_IP/$${LOCAL_IP}/g\" /etc/vault.d/config.hcl\r\n\r\n# Service environment\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\r\nVAULT_ARGS=${vault_args}\r\nEOF\r\nchmod 0600 /etc/vault.d/vault.env\r\n\r\n# Download TLS files from GCS\r\nmkdir -p /etc/vault.d/tls\r\ngsutil cp \"gs://${vault_tls_bucket}/${vault_ca_cert_filename}\" /etc/vault.d/tls/ca.crt\r\ngsutil cp \"gs://${vault_tls_bucket}/${vault_tls_cert_filename}\" /etc/vault.d/tls/vault.crt\r\ngsutil cp \"gs://${vault_tls_bucket}/${vault_tls_key_filename}\" /etc/vault.d/tls/vault.key.enc\r\n\r\n# Decrypt the Vault private key\r\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\r\n  --project=\"${kms_project}\" \\\r\n  --key=\"${kms_crypto_key}\" \\\r\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\r\n  --ciphertext-file=-\r\n\r\n# Make sure Vault owns everything\r\nchmod 700 /etc/vault.d/tls\r\nchmod 600 /etc/vault.d/tls/vault.key\r\nchown -R vault:vault /etc/vault.d\r\nrm /etc/vault.d/tls/vault.key.enc\r\n\r\n# Make audit files\r\nmkdir -p /var/log/vault\r\ntouch /var/log/vault/{audit,server}.log\r\nchmod 0640 /var/log/vault/{audit,server}.log\r\nchown -R vault:adm /var/log/vault\r\n\r\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\r\n# handshakes\r\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\r\nupdate-ca-certificates\r\n\r\n# Systemd service\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\r\n[Unit]\r\nDescription=\"HashiCorp Vault\"\r\nDocumentation=https://www.vaultproject.io/docs/\r\nRequires=network-online.target\r\nAfter=network-online.target\r\n# Stop after the shutdown script stops.\r\nBefore=google-shutdown-scripts.service\r\nConditionFileNotEmpty=/etc/vault.d/config.hcl\r\n\r\n[Service]\r\nUser=vault\r\nGroup=vault\r\nProtectSystem=full\r\nProtectHome=read-only\r\nPrivateTmp=yes\r\nPrivateDevices=yes\r\nSecureBits=keep-caps\r\nStandardError=syslog\r\nStandardOutput=syslog\r\nSyslogIdentifier=vault\r\nAmbientCapabilities=CAP_IPC_LOCK\r\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\r\nNoNewPrivileges=yes\r\nEnvironmentFile=/etc/vault.d/vault.env\r\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\r\nExecReload=/bin/kill --signal HUP $MAINPID\r\nKillMode=process\r\nKillSignal=SIGINT\r\nRestart=on-failure\r\nRestartSec=5\r\nTimeoutStopSec=30\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\nchmod 0644 /etc/systemd/system/vault.service\r\nsystemctl daemon-reload\r\nsystemctl enable vault\r\nsystemctl start vault\r\n\r\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\r\n\r\n# Prevent core dumps - from all attack vectors\r\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\r\nkernel.core_pattern=|/bin/false\r\nEOF\r\nsysctl -p /etc/sysctl.d/50-coredump.conf\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\r\n* hard core 0\r\nEOF\r\n\r\nmkdir -p /etc/systemd/coredump.conf.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\r\n[Coredump]\r\nStorage=none\r\nEOF\r\n\r\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\r\nfs.suid_dumpable = 0\r\nEOF\r\nsysctl -p\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\r\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\r\nEOF\r\nsource /etc/profile.d/ulimit.sh\r\n\r\n# Reload any systemd changes for core dumps\r\nsystemctl daemon-reload\r\n\r\n# Setup vault env\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\r\nexport VAULT_ADDR=\"http://127.0.0.1:${vault_port}\"\r\n\r\n# Ignore history from any Vault commands\r\nexport HISTIGNORE=\"\u0026:vault*\"\r\nEOF\r\nchmod 644 /etc/profile.d/vault.sh\r\nsource /etc/profile.d/vault.sh\r\n\r\n# Pull Vault data from syslog into a file for fluentd\r\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\r\n#\r\n# Extract Vault logs from syslog\r\n#\r\n\r\n# Only include the message (Vault has its own timestamps and data)\r\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\r\n\r\nif ( $programname == \"vault\" ) then {\r\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\r\n  stop\r\n}\r\nEOF\r\nsystemctl restart rsyslog\r\n\r\n# Install Stackdriver for logging and monitoring\r\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\r\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\r\napt-get update -yqq\r\n# Install structured logs\r\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\r\n\r\n# Start Stackdriver logging agent and setup the filesystem to be ready to\r\n# receive audit logs\r\nmkdir -p /etc/google-fluentd/config.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\r\n\u003csource\u003e\r\n  @type tail\r\n  format json\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/audit.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\r\n  read_from_head true\r\n  tag vaultproject.io/audit\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/audit\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"$${record.dig('request', 'id') || '-'} $${record.dig('request', 'remote_address') || '-'} $${record.dig('auth', 'display_name') || '-'} $${record.dig('request', 'operation') || '-'} $${record.dig('request', 'path') || '-'}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\n\r\n\u003csource\u003e\r\n  @type tail\r\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/server.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\r\n  read_from_head true\r\n  tag vaultproject.io/server\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/server\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"$${record['source']}: $${record['message']}\"\r\n    severity \"$${(record['severity'] || '').downcase}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\nEOF\r\nsystemctl enable google-fluentd\r\nsystemctl restart google-fluentd\r\n\r\n# Install logrotate\r\napt-get install -yqq logrotate\r\n\r\n# Configure logrotate for Vault audit logs\r\nmkdir -p /etc/logrotate.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\r\n/var/log/vault/*.log {\r\n  daily\r\n  rotate 3\r\n  missingok\r\n  compress\r\n  notifempty\r\n  create 0640 vault adm\r\n  sharedscripts\r\n  postrotate\r\n    /bin/systemctl reload vault 2\u003e /dev/null\r\n    true\r\n  endscript\r\n}\r\nEOF\r\n\r\n# Start Stackdriver monitoring\r\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\r\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\r\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\r\n\r\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\r\n# by default and generates frequent error messages trying to divide by zero\r\n# when there is no swap.  This perl command is an in-place edit to disable the\r\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\r\n# having to filter them in stackdriver.\r\n#\r\n# The error string related to this is:\r\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\r\n# See https://issuetracker.google.com/issues/161054680#comment5\r\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\r\n\r\nsystemctl enable stackdriver-agent\r\nservice stackdriver-agent restart\r\n\r\n#########################################\r\n##          user_startup_script        ##\r\n#########################################\r\n${user_startup_script}\r\n\r\n# Signal this script has run\r\ntouch ~/.startup-script-complete\r\n",
            "vars": {
              "config": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\r\n# have this set.\r\napi_addr     = \"https://34.83.113.229:8200\"\r\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\r\ncluster_addr = \"https://LOCAL_IP:8201\"\r\n\r\n# Set debugging level\r\nlog_level = \"warn\"\r\n\r\n# Enable the UI\r\nui = true\r\n\r\n# Enable plugin directory\r\nplugin_directory = \"/etc/vault.d/plugins\"\r\n\r\n# Enable auto-unsealing with Google Cloud KMS\r\nseal \"gcpckms\" {\r\n  project    = \"white-rabbit-328319\"\r\n  region     = \"us-west1\"\r\n  key_ring   = \"zion\"\r\n  crypto_key = \"matrix-one\"\r\n}\r\n\r\n# Enable HA backend storage with GCS\r\nstorage \"gcs\" {\r\n  bucket     = \"white-rabbit-328319-vault-data\"\r\n  ha_enabled = \"true\"\r\n}\r\n\r\n# Create local non-TLS listener\r\nlistener \"tcp\" {\r\n  address     = \"127.0.0.1:8200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\r\n# firewall doesn't allow traffic to this port except from the probe IP range.\r\nlistener \"tcp\" {\r\n  address     = \"34.83.113.229:58200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create an mTLS listener on the load balancer address\r\nlistener \"tcp\" {\r\n  address            = \"34.83.113.229:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\r\n# but not all clients are well-behaved. This is also needed so the cluster\r\n# nodes can communicate with each other.\r\nlistener \"tcp\" {\r\n  address            = \"LOCAL_IP:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Send data to statsd (Stackdriver monitoring)\r\ntelemetry {\r\n  statsd_address   = \"127.0.0.1:8125\"\r\n  disable_hostname = true\r\n}\r\n",
              "custom_http_proxy": "",
              "internal_lb": "false",
              "kms_crypto_key": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one",
              "kms_project": "white-rabbit-328319",
              "service_account_email": "vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
              "user_startup_script": "",
              "vault_args": "",
              "vault_ca_cert_filename": "ca.crt",
              "vault_port": "8200",
              "vault_proxy_port": "58200",
              "vault_tls_bucket": "white-rabbit-328319-vault-data",
              "vault_tls_cert_filename": "vault.crt",
              "vault_tls_key_filename": "vault.key.enc",
              "vault_version": "1.6.0"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_forwarding_rule",
      "name": "external",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "all_ports": false,
            "allow_global_access": false,
            "backend_service": "",
            "creation_timestamp": "2021-10-24T02:08:41.342-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/forwardingRules/vault-external",
            "ip_address": "34.83.113.229",
            "ip_protocol": "TCP",
            "is_mirroring_collector": false,
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "load_balancing_scheme": "EXTERNAL",
            "name": "vault-external",
            "network": "",
            "network_tier": "PREMIUM",
            "port_range": "8200",
            "ports": null,
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/forwardingRules/vault-external",
            "service_label": "",
            "service_name": "",
            "subnetwork": "",
            "target": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/targetPools/vault-tp",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "autoheal",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 10,
            "creation_timestamp": "2021-10-24T02:08:04.743-07:00",
            "description": "",
            "grpc_health_check": [],
            "healthy_threshold": 1,
            "http2_health_check": [],
            "http_health_check": [],
            "https_health_check": [
              {
                "host": "",
                "port": 8200,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request_path": "/v1/sys/health?uninitcode=200\u0026standbyok=true",
                "response": ""
              }
            ],
            "id": "projects/white-rabbit-328319/global/healthChecks/vault-health-autoheal",
            "log_config": [
              {
                "enable": false
              }
            ],
            "name": "vault-health-autoheal",
            "project": "white-rabbit-328319",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/healthChecks/vault-health-autoheal",
            "ssl_health_check": [],
            "tcp_health_check": [],
            "timeout_sec": 5,
            "timeouts": null,
            "type": "HTTPS",
            "unhealthy_threshold": 2
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_http_health_check",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 15,
            "creation_timestamp": "2021-10-24T02:08:04.746-07:00",
            "description": "",
            "healthy_threshold": 2,
            "host": "",
            "id": "projects/white-rabbit-328319/global/httpHealthChecks/vault-health-legacy",
            "name": "vault-health-legacy",
            "port": 58200,
            "project": "white-rabbit-328319",
            "request_path": "/v1/sys/health?uninitcode=200",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/httpHealthChecks/vault-health-legacy",
            "timeout_sec": 5,
            "timeouts": null,
            "unhealthy_threshold": 2
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "advanced_machine_features": null,
            "can_ip_forward": false,
            "confidential_instance_config": null,
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 0,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": null,
                "mode": "READ_WRITE",
                "resource_policies": null,
                "source": "",
                "source_image": "projects/debian-cloud/global/images/family/debian-10",
                "type": "PERSISTENT"
              }
            ],
            "enable_display": null,
            "guest_accelerator": [],
            "id": "projects/white-rabbit-328319/global/instanceTemplates/vault-20211024090902953600000001",
            "instance_description": "",
            "labels": null,
            "machine_type": "e2-standard-2",
            "metadata": {
              "google-compute-enable-virtio-rng": "true",
              "startup-script": "#! /usr/bin/env bash\r\nset -xe\r\nset -o pipefail\r\n\r\n# Only run the script once\r\nif [ -f ~/.startup-script-complete ]; then\r\n  echo \"Startup script already ran, exiting\"\r\n  exit 0\r\nfi\r\n\r\n# Data\r\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\r\n\r\n# Allow users to specify an HTTP proxy for egress instead of a NAT\r\nif [ ! -z '' ]; then\r\n  export http_proxy=\r\n  export https_proxy=$http_proxy\r\nfi\r\n\r\n# Get Vault up and running as quickly as possible to get the auto-heal health\r\n# check passing.  This results in faster recovery and faster rolling upgrades.\r\n\r\n# Deps\r\nexport DEBIAN_FRONTEND=noninteractive\r\n\r\n# Download and install Vault\r\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_linux_amd64.zip\"\r\n# Unzip without having to apt install unzip\r\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\r\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\r\nrm /tmp/vault.zip /tmp/vault\r\n\r\n# Give Vault the ability to run mlock as non-root\r\nif ! [[ -x /sbin/setcap ]]; then\r\n  apt install -qq -y libcap2-bin\r\nfi\r\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\r\n\r\n# Add Vault user\r\nuseradd -d /etc/vault.d -s /bin/false vault\r\n\r\n# Vault config\r\nmkdir -p /etc/vault.d\r\nmkdir /etc/vault.d/plugins\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\r\n# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\r\n# have this set.\r\napi_addr     = \"https://34.83.113.229:8200\"\r\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\r\ncluster_addr = \"https://LOCAL_IP:8201\"\r\n\r\n# Set debugging level\r\nlog_level = \"warn\"\r\n\r\n# Enable the UI\r\nui = true\r\n\r\n# Enable plugin directory\r\nplugin_directory = \"/etc/vault.d/plugins\"\r\n\r\n# Enable auto-unsealing with Google Cloud KMS\r\nseal \"gcpckms\" {\r\n  project    = \"white-rabbit-328319\"\r\n  region     = \"us-west1\"\r\n  key_ring   = \"zion\"\r\n  crypto_key = \"matrix-one\"\r\n}\r\n\r\n# Enable HA backend storage with GCS\r\nstorage \"gcs\" {\r\n  bucket     = \"white-rabbit-328319-vault-data\"\r\n  ha_enabled = \"true\"\r\n}\r\n\r\n# Create local non-TLS listener\r\nlistener \"tcp\" {\r\n  address     = \"127.0.0.1:8200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\r\n# firewall doesn't allow traffic to this port except from the probe IP range.\r\nlistener \"tcp\" {\r\n  address     = \"34.83.113.229:58200\"\r\n  tls_disable = 1\r\n}\r\n\r\n# Create an mTLS listener on the load balancer address\r\nlistener \"tcp\" {\r\n  address            = \"34.83.113.229:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\r\n# but not all clients are well-behaved. This is also needed so the cluster\r\n# nodes can communicate with each other.\r\nlistener \"tcp\" {\r\n  address            = \"LOCAL_IP:8200\"\r\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\r\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\r\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\r\n\r\n  tls_disable_client_certs           = \"false\"\r\n  tls_require_and_verify_client_cert = \"false\"\r\n}\r\n\r\n# Send data to statsd (Stackdriver monitoring)\r\ntelemetry {\r\n  statsd_address   = \"127.0.0.1:8125\"\r\n  disable_hostname = true\r\n}\r\n\r\nEOF\r\nchmod 0600 /etc/vault.d/config.hcl\r\n\r\n# Sub in local IP\r\n# $$ is correct here because we are in terraform template\r\nsed -i \"s/LOCAL_IP/${LOCAL_IP}/g\" /etc/vault.d/config.hcl\r\n\r\n# Service environment\r\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\r\nVAULT_ARGS=\r\nEOF\r\nchmod 0600 /etc/vault.d/vault.env\r\n\r\n# Download TLS files from GCS\r\nmkdir -p /etc/vault.d/tls\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/ca.crt\" /etc/vault.d/tls/ca.crt\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/vault.crt\" /etc/vault.d/tls/vault.crt\r\ngsutil cp \"gs://white-rabbit-328319-vault-data/vault.key.enc\" /etc/vault.d/tls/vault.key.enc\r\n\r\n# Decrypt the Vault private key\r\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\r\n  --project=\"white-rabbit-328319\" \\\r\n  --key=\"projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one\" \\\r\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\r\n  --ciphertext-file=-\r\n\r\n# Make sure Vault owns everything\r\nchmod 700 /etc/vault.d/tls\r\nchmod 600 /etc/vault.d/tls/vault.key\r\nchown -R vault:vault /etc/vault.d\r\nrm /etc/vault.d/tls/vault.key.enc\r\n\r\n# Make audit files\r\nmkdir -p /var/log/vault\r\ntouch /var/log/vault/{audit,server}.log\r\nchmod 0640 /var/log/vault/{audit,server}.log\r\nchown -R vault:adm /var/log/vault\r\n\r\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\r\n# handshakes\r\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\r\nupdate-ca-certificates\r\n\r\n# Systemd service\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\r\n[Unit]\r\nDescription=\"HashiCorp Vault\"\r\nDocumentation=https://www.vaultproject.io/docs/\r\nRequires=network-online.target\r\nAfter=network-online.target\r\n# Stop after the shutdown script stops.\r\nBefore=google-shutdown-scripts.service\r\nConditionFileNotEmpty=/etc/vault.d/config.hcl\r\n\r\n[Service]\r\nUser=vault\r\nGroup=vault\r\nProtectSystem=full\r\nProtectHome=read-only\r\nPrivateTmp=yes\r\nPrivateDevices=yes\r\nSecureBits=keep-caps\r\nStandardError=syslog\r\nStandardOutput=syslog\r\nSyslogIdentifier=vault\r\nAmbientCapabilities=CAP_IPC_LOCK\r\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\r\nNoNewPrivileges=yes\r\nEnvironmentFile=/etc/vault.d/vault.env\r\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\r\nExecReload=/bin/kill --signal HUP $MAINPID\r\nKillMode=process\r\nKillSignal=SIGINT\r\nRestart=on-failure\r\nRestartSec=5\r\nTimeoutStopSec=30\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\nchmod 0644 /etc/systemd/system/vault.service\r\nsystemctl daemon-reload\r\nsystemctl enable vault\r\nsystemctl start vault\r\n\r\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\r\n\r\n# Prevent core dumps - from all attack vectors\r\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\r\nkernel.core_pattern=|/bin/false\r\nEOF\r\nsysctl -p /etc/sysctl.d/50-coredump.conf\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\r\n* hard core 0\r\nEOF\r\n\r\nmkdir -p /etc/systemd/coredump.conf.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\r\n[Coredump]\r\nStorage=none\r\nEOF\r\n\r\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\r\nfs.suid_dumpable = 0\r\nEOF\r\nsysctl -p\r\n\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\r\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\r\nEOF\r\nsource /etc/profile.d/ulimit.sh\r\n\r\n# Reload any systemd changes for core dumps\r\nsystemctl daemon-reload\r\n\r\n# Setup vault env\r\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\r\nexport VAULT_ADDR=\"http://127.0.0.1:8200\"\r\n\r\n# Ignore history from any Vault commands\r\nexport HISTIGNORE=\"\u0026:vault*\"\r\nEOF\r\nchmod 644 /etc/profile.d/vault.sh\r\nsource /etc/profile.d/vault.sh\r\n\r\n# Pull Vault data from syslog into a file for fluentd\r\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\r\n#\r\n# Extract Vault logs from syslog\r\n#\r\n\r\n# Only include the message (Vault has its own timestamps and data)\r\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\r\n\r\nif ( $programname == \"vault\" ) then {\r\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\r\n  stop\r\n}\r\nEOF\r\nsystemctl restart rsyslog\r\n\r\n# Install Stackdriver for logging and monitoring\r\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\r\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\r\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\r\napt-get update -yqq\r\n# Install structured logs\r\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\r\n\r\n# Start Stackdriver logging agent and setup the filesystem to be ready to\r\n# receive audit logs\r\nmkdir -p /etc/google-fluentd/config.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\r\n\u003csource\u003e\r\n  @type tail\r\n  format json\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/audit.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\r\n  read_from_head true\r\n  tag vaultproject.io/audit\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/audit\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"${record.dig('request', 'id') || '-'} ${record.dig('request', 'remote_address') || '-'} ${record.dig('auth', 'display_name') || '-'} ${record.dig('request', 'operation') || '-'} ${record.dig('request', 'path') || '-'}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\n\r\n\u003csource\u003e\r\n  @type tail\r\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\r\n\r\n  time_type \"string\"\r\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\r\n  keep_time_key true\r\n\r\n  path /var/log/vault/server.log\r\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\r\n  read_from_head true\r\n  tag vaultproject.io/server\r\n\u003c/source\u003e\r\n\r\n\u003cfilter vaultproject.io/server\u003e\r\n  @type record_transformer\r\n  enable_ruby true\r\n  \u003crecord\u003e\r\n    message \"${record['source']}: ${record['message']}\"\r\n    severity \"${(record['severity'] || '').downcase}\"\r\n    host \"#{Socket.gethostname}\"\r\n  \u003c/record\u003e\r\n\u003c/filter\u003e\r\nEOF\r\nsystemctl enable google-fluentd\r\nsystemctl restart google-fluentd\r\n\r\n# Install logrotate\r\napt-get install -yqq logrotate\r\n\r\n# Configure logrotate for Vault audit logs\r\nmkdir -p /etc/logrotate.d\r\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\r\n/var/log/vault/*.log {\r\n  daily\r\n  rotate 3\r\n  missingok\r\n  compress\r\n  notifempty\r\n  create 0640 vault adm\r\n  sharedscripts\r\n  postrotate\r\n    /bin/systemctl reload vault 2\u003e /dev/null\r\n    true\r\n  endscript\r\n}\r\nEOF\r\n\r\n# Start Stackdriver monitoring\r\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\r\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\r\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\r\n\r\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\r\n# by default and generates frequent error messages trying to divide by zero\r\n# when there is no swap.  This perl command is an in-place edit to disable the\r\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\r\n# having to filter them in stackdriver.\r\n#\r\n# The error string related to this is:\r\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\r\n# See https://issuetracker.google.com/issues/161054680#comment5\r\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\r\n\r\nsystemctl enable stackdriver-agent\r\nservice stackdriver-agent restart\r\n\r\n#########################################\r\n##          user_startup_script        ##\r\n#########################################\r\n\r\n\r\n# Signal this script has run\r\ntouch ~/.startup-script-complete\r\n"
            },
            "metadata_fingerprint": "ntvwwXKgxnI=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "vault-20211024090902953600000001",
            "name_prefix": "vault-",
            "network_interface": [
              {
                "access_config": [],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/networks/vault-network",
                "network_ip": "",
                "nic_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/subnetworks/vault-subnet",
                "subnetwork_project": "white-rabbit-328319"
              }
            ],
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "reservation_affinity": [],
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "self_link": "https://www.googleapis.com/compute/beta/projects/white-rabbit-328319/global/instanceTemplates/vault-20211024090902953600000001",
            "service_account": [
              {
                "email": "vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [],
            "tags": [
              "allow-ssh",
              "allow-vault"
            ],
            "tags_fingerprint": "",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_region_autoscaler",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "autoscaling_policy": [
              {
                "cooldown_period": 300,
                "cpu_utilization": [
                  {
                    "predictive_method": "NONE",
                    "target": 0.8
                  }
                ],
                "load_balancing_utilization": [],
                "max_replicas": 7,
                "metric": [],
                "min_replicas": 1,
                "mode": "ON",
                "scale_in_control": [],
                "scaling_schedules": []
              }
            ],
            "creation_timestamp": "2021-10-24T02:10:09.493-07:00",
            "description": "",
            "id": "projects/white-rabbit-328319/regions/us-west1/autoscalers/vault-as",
            "name": "vault-as",
            "project": "white-rabbit-328319",
            "region": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/autoscalers/vault-as",
            "target": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/instanceGroupManagers/vault-igm",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.google_compute_zones.available",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_health_check.autoheal",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_instance_template.vault",
            "module.vault.module.cluster.google_compute_region_instance_group_manager.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_region_instance_group_manager",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [
              {
                "health_check": "https://www.googleapis.com/compute/beta/projects/white-rabbit-328319/global/healthChecks/vault-health-autoheal",
                "initial_delay_sec": 60
              }
            ],
            "base_instance_name": "vault-us-west1",
            "description": "",
            "distribution_policy_target_shape": "EVEN",
            "distribution_policy_zones": [
              "us-west1-a",
              "us-west1-b",
              "us-west1-c"
            ],
            "fingerprint": "iIfIH4W6nH0=",
            "id": "projects/white-rabbit-328319/regions/us-west1/instanceGroupManagers/vault-igm",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/instanceGroups/vault-igm",
            "name": "vault-igm",
            "named_port": [
              {
                "name": "vault-http",
                "port": 8200
              }
            ],
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/instanceGroupManagers/vault-igm",
            "stateful_disk": [],
            "status": [
              {
                "is_stable": true,
                "stateful": [
                  {
                    "has_stateful_config": false,
                    "per_instance_configs": [
                      {
                        "all_effective": true
                      }
                    ]
                  }
                ],
                "version_target": [
                  {
                    "is_reached": true
                  }
                ]
              }
            ],
            "target_pools": [
              "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/targetPools/vault-tp"
            ],
            "target_size": 0,
            "timeouts": null,
            "update_policy": [
              {
                "instance_redistribution_type": "PROACTIVE",
                "max_surge_fixed": 0,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 3,
                "max_unavailable_percent": 0,
                "min_ready_sec": 0,
                "minimal_action": "REPLACE",
                "replacement_method": "SUBSTITUTE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/instanceTemplates/vault-20211024090902953600000001",
                "name": "",
                "target_size": []
              }
            ],
            "wait_for_instances": false,
            "wait_for_instances_status": "STABLE"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjkwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.google_compute_zones.available",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_health_check.autoheal",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_instance_template.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_target_pool",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "backup_pool": "",
            "description": "",
            "failover_ratio": 0,
            "health_checks": [
              "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/global/httpHealthChecks/vault-health-legacy"
            ],
            "id": "projects/white-rabbit-328319/regions/us-west1/targetPools/vault-tp",
            "instances": [],
            "name": "vault-tp",
            "project": "white-rabbit-328319",
            "region": "us-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-rabbit-328319/regions/us-west1/targetPools/vault-tp",
            "session_affinity": "NONE",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.module.cluster.google_compute_http_health_check.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_crypto_key",
      "name": "vault-init",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "destroy_scheduled_duration": "86400s",
            "id": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one",
            "import_only": false,
            "key_ring": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion",
            "labels": null,
            "name": "matrix-one",
            "purpose": "ENCRYPT_DECRYPT",
            "rotation_period": "604800s",
            "self_link": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one",
            "skip_initial_version_creation": false,
            "timeouts": null,
            "version_template": [
              {
                "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
                "protection_level": "SOFTWARE"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_crypto_key_iam_member",
      "name": "ck-iam",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "crypto_key_id": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one",
            "etag": "BwXPFZZ2Ooc=",
            "id": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one/roles/cloudkms.cryptoKeyEncrypterDecrypter/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_key_ring",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion",
            "location": "us-west1",
            "name": "zion",
            "project": "white-rabbit-328319",
            "self_link": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_secret_ciphertext",
      "name": "vault-tls-key-encrypted",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "additional_authenticated_data": null,
            "ciphertext": "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",
            "crypto_key": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-one",
            "id": "projects/white-rabbit-328319/locations/us-west1/keyRings/zion/cryptoKeys/matrix-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",
            "plaintext": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAz4YHABf2VYV6+iSSanmGbZz1ir+Z8H/2XBBS4HTSSJOYT3uC\nUgbvoJRaRdVussAibHR/ySSH7Ac9SfuE18hiPu/yuWeJJHqfheR+i4LXPhO/txVa\nl+NHV2eiFLKAAxxMkQ68KoWXEpxbUgRZTzJZ+rHO+fQgcQNAIxyx5Y586v8V9S3S\nz721HqgNk1u+hrT1T0wjALHxnAxU7OMUlBjBweuWHMlDwP1+Msr677GhjB0stcO6\nCt4XAmWZ1R0PYQ5tbcfsHjzV2bPuzOMUs1KAq9NJovQZQ2KcldNliAj74Au32AZz\nX8vF4cwThCEcMr4a/CAukJXlPaNEH8sHLvEhVwIDAQABAoIBAQCVUebvlk5VMvpN\nysrfehnT/UBgWYU2m5x0mfpIL0avmiPZ7RDUXNFHRfe+j9hbHgym5Rydan+ywXLE\nLQplCXZHuvd3mJwBd4oZGVREphyiOiuUXPUWnR7UMWlaYyXhFxewuF2EayNM7Nx4\no1Bvv9cmn5JCH/rH1oLrwNXwSxpvK1d8GAH74SntCK0eDyKTgu2UGahvJOExIOmz\nV2MBJXxAdSBgKp+3WGNgMVtG1BX5bkh89faUXcRJxnbpWbfBdgWZUzGGD1qHBs8x\nfI6ZXHORDT45SuXYJ8BeHXIo3/E/ZS5O/Kpp/OluODTyETx0xaWTOHYobG50nj6R\nE3tIoJUhAoGBANNcCc/996Mee/RIpiwITndgzIX5RMzvfa3GDzVJ+yRLlW2aHWP1\nKtJcLIV3+z1wCwNUqB5OG73k8tNhpKDmofrr54O8G+91DJjjz8rqclgzodJ1G13M\n44/74EYYxRFkqg1N1OH3PJda5/0YF76PjKnTKRdxDbDu6fyAvYRS0uLLAoGBAPta\nlQFjB/G94isxJi8AkxbEqFOP8UGnI4RGl0vA+1dKP08zJ+ltUWho3dkpMaRVuSmZ\nv9ezs7rxvhRjRHuezv7rzIBOfkWfeQbdnHDRb8FhJifnrcjNFnHIq75a80EbeWQ/\nN30XIZEYw7b+Rr2mp/jrIY7E1eKyPZKsLeiCBc4lAoGBAINdmCezJOA4iTg6kzWY\n8BQYkOXQGSf6zjVcfYVUdwiHBdf6Srwe3D+k1HMcMIZuBhpK2rcDOxDapOYmsSjk\nT9biGqHxH7fEG1FHfpYTA4C4jqJ88MZrGyEZnrpSmOGHnH3qWx8bCIjWEoxnFhL1\nq6q9uLN+K9FFnR64cZI13CbjAoGBAPEbHc2bwhYYj+fgmIEDqxRvBgxKCiFxAzey\nQxTug+pilUISjxlxvGJMHWpfAnhhpmEKU6TEgwYzN6L06c8vMd4EMEFvid6dL4nv\ncE4kCHBWETS8Hs58NChnVp8dPTPZ9+K6ZS6/znoRaEOTvCXVxFCYs7Lwiz6OvVOB\nh/P9LTZlAoGAPgBdARWqaoDa1WuMtd+/SGuqIMawg1LWk+lRHPvj/xTEAseldgvh\nscmSwvzJd+l/Da7wOn44hSymMZbpbfChl0GSIIUvVigLJlYGRqWW+fIPa0OlMbsg\nReTzf4jHAP/nYyZBzzZLdpBIfKop3A/aWkEfdQOD8XC2t/4ZrXWiAko=\n-----END RSA PRIVATE KEY-----\n",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "project-iam",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "roles/logging.logWriter",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXPFZanVzU=",
            "id": "white-rabbit-328319/roles/logging.logWriter/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "project": "white-rabbit-328319",
            "role": "roles/logging.logWriter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        },
        {
          "index_key": "roles/monitoring.metricWriter",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXPFZanVzU=",
            "id": "white-rabbit-328319/roles/monitoring.metricWriter/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "project": "white-rabbit-328319",
            "role": "roles/monitoring.metricWriter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        },
        {
          "index_key": "roles/monitoring.viewer",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXPFZanVzU=",
            "id": "white-rabbit-328319/roles/monitoring.viewer/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "project": "white-rabbit-328319",
            "role": "roles/monitoring.viewer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_iam_member",
      "name": "vault",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "roles/storage.legacyBucketReader",
          "schema_version": 0,
          "attributes": {
            "bucket": "b/white-rabbit-328319-vault-data",
            "condition": [],
            "etag": "CAM=",
            "id": "b/white-rabbit-328319-vault-data/roles/storage.legacyBucketReader/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "role": "roles/storage.legacyBucketReader"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault"
          ]
        },
        {
          "index_key": "roles/storage.objectAdmin",
          "schema_version": 0,
          "attributes": {
            "bucket": "b/white-rabbit-328319-vault-data",
            "condition": [],
            "etag": "CAM=",
            "id": "b/white-rabbit-328319-vault-data/roles/storage.objectAdmin/serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@white-rabbit-328319.iam.gserviceaccount.com",
            "role": "roles/storage.objectAdmin"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-ca-cert",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "white-rabbit-328319-vault-data",
            "cache_control": "",
            "content": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQKhxYrtlLN1BJfvE1b9L1iTANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjExMDI0MDkwODA0WhcNMjQxMDIzMDkwODA0WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDeBat7Aumyxi9oc5sPtsAWER8/\nCHUPeky6h1lEMBzhrV8UM8ogasAe3tGLqVke/QfHtOI08qFBzC9HphBsIHcDkWYS\ntYIlSbBHOf/PvB9oXAotP10Rt+Taph50lY/hNiHLXOgpQspZ9sb3DlyUSDF1XJJx\nP/1I2xvzTnKBaMJ5ZgiCdGl0tf5g1xK7FcXaD8DNsau9fGOj2RewMdnYoGdaJMwB\nhYm9x7OGIcLML9phNhrwSCdvTtI5n0+02Qu546rO8LQUevgqtPQzzceGKgL14JbN\n8hzygktjzoe3DbisJM80gu8pqWNs0H4sR1sua6z6QuKx+EZBuuTyYQ072sW5AgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTX/AS2si5dfYMXAKfHx9YyEUFXWDANBgkqhkiG9w0BAQsFAAOCAQEAykrlWaDk\nehbbxYHCr5ZZNkba74zoIxdxyOuEb0RTncoV8WrUFwWA9ezm3dWz+mrIr+QQeGn/\nLswUUb/Z+Rom4OrxLhPp0nMMpivqnCGL3KgC/nzfn+QKNEWVVmttMOgKz8Ib7BgX\ndt2EORpF+50iG3P0eXgz16yALPOD/nsgWuf0kT/EQX0l/cCyCT1YP+vMy1NCM4pq\n5OAuUcXUKEmdBIkfkBNELvaBqQ7R4007Wz81XGbdeu1eTctFc9yIjOOD3nHOiMvo\n/jeGFhs3+X6GNe1YwmCTA3G7GLYpRZWUEu4FX2AFCa6kBFOoLDv4dLlG7fXXpAfa\nx6rK0ieHNk39FA==\n-----END CERTIFICATE-----\n",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "QX7Frg==",
            "customer_encryption": [],
            "detect_md5hash": "G6TdVKBo1bdR0fEaEMx7hQ==",
            "event_based_hold": false,
            "id": "white-rabbit-328319-vault-data-ca.crt",
            "kms_key_name": "",
            "md5hash": "G6TdVKBo1bdR0fEaEMx7hQ==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/white-rabbit-328319-vault-data/o/ca.crt?generation=1635066513976933\u0026alt=media",
            "metadata": null,
            "name": "ca.crt",
            "output_name": "ca.crt",
            "self_link": "https://www.googleapis.com/storage/v1/b/white-rabbit-328319-vault-data/o/ca.crt",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-private-key",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "white-rabbit-328319-vault-data",
            "cache_control": "",
            "content": "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",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "3kKMbw==",
            "customer_encryption": [],
            "detect_md5hash": "+5ZqZy6r1JXy/8zESDl/PQ==",
            "event_based_hold": false,
            "id": "white-rabbit-328319-vault-data-vault.key.enc",
            "kms_key_name": "",
            "md5hash": "+5ZqZy6r1JXy/8zESDl/PQ==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/white-rabbit-328319-vault-data/o/vault.key.enc?generation=1635066514480814\u0026alt=media",
            "metadata": null,
            "name": "vault.key.enc",
            "output_name": "vault.key.enc",
            "self_link": "https://www.googleapis.com/storage/v1/b/white-rabbit-328319-vault-data/o/vault.key.enc",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault",
            "module.vault.module.cluster.google_kms_secret_ciphertext.vault-tls-key-encrypted",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-server-cert",
      "provider": "module.vault.provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "white-rabbit-328319-vault-data",
            "cache_control": "",
            "content": "-----BEGIN CERTIFICATE-----\nMIIEEzCCAvugAwIBAgIQOfjvnWrrE0xjgfwQ9Hpu2DANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjExMDI0MDkwODUzWhcNMjMxMDI0MDkwODUzWjBUMRUwEwYDVQQK\nEwxFeGFtcGxlLCBJbmMxHzAdBgNVBAsTFklUIFNlY3VyaXR5IE9wZXJhdGlvbnMx\nGjAYBgNVBAMTEXZhdWx0LmV4YW1wbGUubmV0MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAz4YHABf2VYV6+iSSanmGbZz1ir+Z8H/2XBBS4HTSSJOYT3uC\nUgbvoJRaRdVussAibHR/ySSH7Ac9SfuE18hiPu/yuWeJJHqfheR+i4LXPhO/txVa\nl+NHV2eiFLKAAxxMkQ68KoWXEpxbUgRZTzJZ+rHO+fQgcQNAIxyx5Y586v8V9S3S\nz721HqgNk1u+hrT1T0wjALHxnAxU7OMUlBjBweuWHMlDwP1+Msr677GhjB0stcO6\nCt4XAmWZ1R0PYQ5tbcfsHjzV2bPuzOMUs1KAq9NJovQZQ2KcldNliAj74Au32AZz\nX8vF4cwThCEcMr4a/CAukJXlPaNEH8sHLvEhVwIDAQABo3AwbjATBgNVHSUEDDAK\nBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFNf8BLayLl19gxcA\np8fH1jIRQVdYMCgGA1UdEQQhMB+CEXZhdWx0LmV4YW1wbGUubmV0hwQiU3HlhwR/\nAAABMA0GCSqGSIb3DQEBCwUAA4IBAQCsGqDQXTJmsSfmag8So+JRWfiFVeabb6hw\nlVlNMfODnyiF4BLf96CYdGeA6ewTaL4TqmRv9GsfAMLdP37qJki5kgmufZQKW7QI\n4Oyq+eNMqHpnOJDOtGAzjwpxr9WbMU+EtUG+v5fjRSWvBRcvm81FqIWeTtaRTgtO\n0/6lm1tBteA6iP+9jbIIrGYcCBpDgdgCor5ounf/+4T4/UNq2H0qudIrSAHVGipj\nC5GVhNVZNNxK1OG8CnpNu0BnnuOWyuAQaxdwOvVZlT9Yxn69T9RlakppIABzb8ne\nZrwvEF4fCMk/kyQD6FK1tiufdyIbLuj/eBVrJOpyTL9B9gdxsh6d\n-----END CERTIFICATE-----\n",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "+FD5bA==",
            "customer_encryption": [],
            "detect_md5hash": "8Nd49HIRtlC38Z0j29Q8aw==",
            "event_based_hold": false,
            "id": "white-rabbit-328319-vault-data-vault.crt",
            "kms_key_name": "",
            "md5hash": "8Nd49HIRtlC38Z0j29Q8aw==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/white-rabbit-328319-vault-data/o/vault.crt?generation=1635066533584193\u0026alt=media",
            "metadata": null,
            "name": "vault.crt",
            "output_name": "vault.crt",
            "self_link": "https://www.googleapis.com/storage/v1/b/white-rabbit-328319-vault-data/o/vault.crt",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_cert_request.vault-server",
            "module.vault.module.cluster.tls_locally_signed_cert.vault-server",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_private_key.vault-server",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "local_file",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQKhxYrtlLN1BJfvE1b9L1iTANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjExMDI0MDkwODA0WhcNMjQxMDIzMDkwODA0WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDeBat7Aumyxi9oc5sPtsAWER8/\nCHUPeky6h1lEMBzhrV8UM8ogasAe3tGLqVke/QfHtOI08qFBzC9HphBsIHcDkWYS\ntYIlSbBHOf/PvB9oXAotP10Rt+Taph50lY/hNiHLXOgpQspZ9sb3DlyUSDF1XJJx\nP/1I2xvzTnKBaMJ5ZgiCdGl0tf5g1xK7FcXaD8DNsau9fGOj2RewMdnYoGdaJMwB\nhYm9x7OGIcLML9phNhrwSCdvTtI5n0+02Qu546rO8LQUevgqtPQzzceGKgL14JbN\n8hzygktjzoe3DbisJM80gu8pqWNs0H4sR1sua6z6QuKx+EZBuuTyYQ072sW5AgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTX/AS2si5dfYMXAKfHx9YyEUFXWDANBgkqhkiG9w0BAQsFAAOCAQEAykrlWaDk\nehbbxYHCr5ZZNkba74zoIxdxyOuEb0RTncoV8WrUFwWA9ezm3dWz+mrIr+QQeGn/\nLswUUb/Z+Rom4OrxLhPp0nMMpivqnCGL3KgC/nzfn+QKNEWVVmttMOgKz8Ib7BgX\ndt2EORpF+50iG3P0eXgz16yALPOD/nsgWuf0kT/EQX0l/cCyCT1YP+vMy1NCM4pq\n5OAuUcXUKEmdBIkfkBNELvaBqQ7R4007Wz81XGbdeu1eTctFc9yIjOOD3nHOiMvo\n/jeGFhs3+X6GNe1YwmCTA3G7GLYpRZWUEu4FX2AFCa6kBFOoLDv4dLlG7fXXpAfa\nx6rK0ieHNk39FA==\n-----END CERTIFICATE-----\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "ca.crt",
            "id": "f6d4e93a64d855e93a157c9495fc7c063fb62483",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC1DCCAbwCAQAwVDEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMR8wHQYDVQQLExZJ\nVCBTZWN1cml0eSBPcGVyYXRpb25zMRowGAYDVQQDExF2YXVsdC5leGFtcGxlLm5l\ndDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM+GBwAX9lWFevokkmp5\nhm2c9Yq/mfB/9lwQUuB00kiTmE97glIG76CUWkXVbrLAImx0f8kkh+wHPUn7hNfI\nYj7v8rlniSR6n4XkfouC1z4Tv7cVWpfjR1dnohSygAMcTJEOvCqFlxKcW1IEWU8y\nWfqxzvn0IHEDQCMcseWOfOr/FfUt0s+9tR6oDZNbvoa09U9MIwCx8ZwMVOzjFJQY\nwcHrlhzJQ8D9fjLK+u+xoYwdLLXDugreFwJlmdUdD2EObW3H7B481dmz7szjFLNS\ngKvTSaL0GUNinJXTZYgI++ALt9gGc1/LxeHME4QhHDK+GvwgLpCV5T2jRB/LBy7x\nIVcCAwEAAaA7MDkGCSqGSIb3DQEJDjEsMCowKAYDVR0RBCEwH4IRdmF1bHQuZXhh\nbXBsZS5uZXSHBCJTceWHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBAKhzM3fbFAjJ\nxWtZl2Na2MFQB1Nz+8KFTMLWZpKJWrSjGWLmIst8VGH7Uh9t1EGjnyCKmsMy8r4c\nXRGGXQaxg29FyeHbE+bV2hz+8OUoe631LNYQpf6AaN+Jrrk8y0RxPMZhJZG46CM5\n27107wv+1c4G1THuPp8PvL5pBVmRK9rGD293qPeofhZGD5MU/FILzT/gJCgLJKz6\n9yMRtqyOE7e6k00lVt4PrTbBUNXjS7zTUxhZBFLaQEiC6HixzJ/Up0rPqnOnvQ6d\nlFpn6ES74Vf2j0vbijCAeeYXVozrapVWH7x2Waos2NuvIQzgGaFiffvUf2wW++ic\n4/KeSN/2ekI=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": [
              "vault.example.net"
            ],
            "id": "272672371aae9744ec9e774172e66de0a787b80e",
            "ip_addresses": [
              "34.83.113.229",
              "127.0.0.1"
            ],
            "key_algorithm": "RSA",
            "private_key_pem": "928b3382b661d8a79c12be4bbb9c1f42fb3926da",
            "subject": [
              {
                "common_name": "vault.example.net",
                "country": "",
                "locality": "",
                "organization": "Example, Inc",
                "organizational_unit": "IT Security Operations",
                "postal_code": "",
                "province": "",
                "serial_number": "",
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "server_auth"
            ],
            "ca_cert_pem": "f9628bd1bcd951c94e645596b53b2063e2ceba5a",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "d74e287116bbb67f508498a1cbd743dafe33d841",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEEzCCAvugAwIBAgIQOfjvnWrrE0xjgfwQ9Hpu2DANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjExMDI0MDkwODUzWhcNMjMxMDI0MDkwODUzWjBUMRUwEwYDVQQK\nEwxFeGFtcGxlLCBJbmMxHzAdBgNVBAsTFklUIFNlY3VyaXR5IE9wZXJhdGlvbnMx\nGjAYBgNVBAMTEXZhdWx0LmV4YW1wbGUubmV0MIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAz4YHABf2VYV6+iSSanmGbZz1ir+Z8H/2XBBS4HTSSJOYT3uC\nUgbvoJRaRdVussAibHR/ySSH7Ac9SfuE18hiPu/yuWeJJHqfheR+i4LXPhO/txVa\nl+NHV2eiFLKAAxxMkQ68KoWXEpxbUgRZTzJZ+rHO+fQgcQNAIxyx5Y586v8V9S3S\nz721HqgNk1u+hrT1T0wjALHxnAxU7OMUlBjBweuWHMlDwP1+Msr677GhjB0stcO6\nCt4XAmWZ1R0PYQ5tbcfsHjzV2bPuzOMUs1KAq9NJovQZQ2KcldNliAj74Au32AZz\nX8vF4cwThCEcMr4a/CAukJXlPaNEH8sHLvEhVwIDAQABo3AwbjATBgNVHSUEDDAK\nBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFNf8BLayLl19gxcA\np8fH1jIRQVdYMCgGA1UdEQQhMB+CEXZhdWx0LmV4YW1wbGUubmV0hwQiU3HlhwR/\nAAABMA0GCSqGSIb3DQEBCwUAA4IBAQCsGqDQXTJmsSfmag8So+JRWfiFVeabb6hw\nlVlNMfODnyiF4BLf96CYdGeA6ewTaL4TqmRv9GsfAMLdP37qJki5kgmufZQKW7QI\n4Oyq+eNMqHpnOJDOtGAzjwpxr9WbMU+EtUG+v5fjRSWvBRcvm81FqIWeTtaRTgtO\n0/6lm1tBteA6iP+9jbIIrGYcCBpDgdgCor5ounf/+4T4/UNq2H0qudIrSAHVGipj\nC5GVhNVZNNxK1OG8CnpNu0BnnuOWyuAQaxdwOvVZlT9Yxn69T9RlakppIABzb8ne\nZrwvEF4fCMk/kyQD6FK1tiufdyIbLuj/eBVrJOpyTL9B9gdxsh6d\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "2b1f78199bb609ff144225a6823e51f9708d326a",
            "early_renewal_hours": 8760,
            "id": "77058545348463229238882919602653392600",
            "is_ca_certificate": null,
            "ready_for_renewal": false,
            "set_subject_key_id": null,
            "validity_end_time": "2023-10-24T10:08:53.0955797+01:00",
            "validity_period_hours": 17520,
            "validity_start_time": "2021-10-24T10:08:53.0955797+01:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_cert_request.vault-server",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_private_key.vault-server",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "064d1e025e3a530448671a411ac4a7f770652b50",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEA3gWrewLpssYvaHObD7bAFhEfPwh1D3pMuodZRDAc4a1fFDPK\nIGrAHt7Ri6lZHv0Hx7TiNPKhQcwvR6YQbCB3A5FmErWCJUmwRzn/z7wfaFwKLT9d\nEbfk2qYedJWP4TYhy1zoKULKWfbG9w5clEgxdVyScT/9SNsb805ygWjCeWYIgnRp\ndLX+YNcSuxXF2g/AzbGrvXxjo9kXsDHZ2KBnWiTMAYWJvcezhiHCzC/aYTYa8Egn\nb07SOZ9PtNkLueOqzvC0FHr4KrT0M83HhioC9eCWzfIc8oJLY86Htw24rCTPNILv\nKaljbNB+LEdbLmus+kLisfhGQbrk8mENO9rFuQIDAQABAoIBAGhWw8rQiKFib/8n\nbTTKTqVQMJ3/zHuUnyB94R6hecE5J9inqhLn+BfJ4TJASMi+Yvygbjox2ETCv2lt\nioQ2EZhUqWKbeGkrozMl96lZoGz77DBtecCM6nky3lctvms5dFJM/DH/2HbE+aY7\nUpjBALVF5vBgARlPF2iVckyMvfAsejG7Gqx4emLDICSefIEVz19Gpzn2nLNj7S05\nDKINehyMOSQkI4n7C0muaqG7rhh8mV2SNgKnkLt7XkcFT5bps0JrWtgZkWSCcyf3\nQn1b5/K2Tjx0AX6jXzpf67vibGLK5Z42MXQqk4wbP19G4P4XqBeTUlmqOwBMdL9C\neUHtP3ECgYEA6r9cNsif8932jswTU1N3/eEskN/xlKN4MhDp1RBhaCmFZ2ETu0Ni\nahemoV2B2F6jtzPQnXr451JRtZckJt91o5jjzW3SCxXpl7/PIf4qHISpd+D3EwZZ\nHLBDl+63QjkvefuauKGVbKAPexxnaW52I952UBIWJZgL/j1/cW228HUCgYEA8h9h\nNPHloAZVrnfRtHwVedpO6CQFScCg/ntlj4IIt+gIEXIpR3DoKAlRj1TxfFo1FK4E\nFtn/oMCNTG3jHrgfumQaEsAf0PYTHv20Kuy6m+/hDyjw6kxn+NmrHqFg15KO3BMY\n+UcaaIBxjdFGfJnxcc7o+a9DkCnRCbxLMO0/V7UCgYBusRNTheDexoB3r0VBmm9P\nWLmCCwdIVpjbytvoKxQzYLjWGZGLUOf8LPDW0Ffk5iN+xMEPMShjM47x+LYEWoSH\nQxXQDYPo1ElU1A5g8g97aRbcP0liQDEO9RK6dscVRA/eDkVT4GWsVgFWxPsCXSL6\nIPFbKlwlGAA3v1nz649C7QKBgAKG6VDQJYFiD4renUWw9dhrut8ZYSS/6e4+A3VX\n+hdRSKRF+MBSIVopnrxMOqj9mAg7OLe0VsKqv87IZtJvQYWEffEsKCjaKKDuLO81\nwUzXWBX8a2dGnN8wBmUvcf9N/Ee3u07+uvvUO1srj/zE7owtiKjyd1YN2aysVmyQ\nTVTxAoGAZ1Pv4AS3d+lT3zpoisALSKvc973QQlEZZW07AILagKFS8lS3uvALd525\nN6WvUhMFI5FzuwMe/ozRTaqDfmaSrvUr7hRzaK5OFvRqItMKFYo5EBkc4ckyLzfG\nglTbLOwzOrKjv4hOVcc1CJe9NRukA4C8/l8zHps33lb0TQvNLq4=\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "26:5c:4e:71:ca:28:b0:01:75:8c:e5:37:bd:6a:52:0f",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDeBat7Aumyxi9oc5sPtsAWER8/CHUPeky6h1lEMBzhrV8UM8ogasAe3tGLqVke/QfHtOI08qFBzC9HphBsIHcDkWYStYIlSbBHOf/PvB9oXAotP10Rt+Taph50lY/hNiHLXOgpQspZ9sb3DlyUSDF1XJJxP/1I2xvzTnKBaMJ5ZgiCdGl0tf5g1xK7FcXaD8DNsau9fGOj2RewMdnYoGdaJMwBhYm9x7OGIcLML9phNhrwSCdvTtI5n0+02Qu546rO8LQUevgqtPQzzceGKgL14JbN8hzygktjzoe3DbisJM80gu8pqWNs0H4sR1sua6z6QuKx+EZBuuTyYQ072sW5\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3gWrewLpssYvaHObD7bA\nFhEfPwh1D3pMuodZRDAc4a1fFDPKIGrAHt7Ri6lZHv0Hx7TiNPKhQcwvR6YQbCB3\nA5FmErWCJUmwRzn/z7wfaFwKLT9dEbfk2qYedJWP4TYhy1zoKULKWfbG9w5clEgx\ndVyScT/9SNsb805ygWjCeWYIgnRpdLX+YNcSuxXF2g/AzbGrvXxjo9kXsDHZ2KBn\nWiTMAYWJvcezhiHCzC/aYTYa8Egnb07SOZ9PtNkLueOqzvC0FHr4KrT0M83HhioC\n9eCWzfIc8oJLY86Htw24rCTPNILvKaljbNB+LEdbLmus+kLisfhGQbrk8mENO9rF\nuQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "848c7c46f904709f1b3220e631689e9c6cb0e840",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAz4YHABf2VYV6+iSSanmGbZz1ir+Z8H/2XBBS4HTSSJOYT3uC\nUgbvoJRaRdVussAibHR/ySSH7Ac9SfuE18hiPu/yuWeJJHqfheR+i4LXPhO/txVa\nl+NHV2eiFLKAAxxMkQ68KoWXEpxbUgRZTzJZ+rHO+fQgcQNAIxyx5Y586v8V9S3S\nz721HqgNk1u+hrT1T0wjALHxnAxU7OMUlBjBweuWHMlDwP1+Msr677GhjB0stcO6\nCt4XAmWZ1R0PYQ5tbcfsHjzV2bPuzOMUs1KAq9NJovQZQ2KcldNliAj74Au32AZz\nX8vF4cwThCEcMr4a/CAukJXlPaNEH8sHLvEhVwIDAQABAoIBAQCVUebvlk5VMvpN\nysrfehnT/UBgWYU2m5x0mfpIL0avmiPZ7RDUXNFHRfe+j9hbHgym5Rydan+ywXLE\nLQplCXZHuvd3mJwBd4oZGVREphyiOiuUXPUWnR7UMWlaYyXhFxewuF2EayNM7Nx4\no1Bvv9cmn5JCH/rH1oLrwNXwSxpvK1d8GAH74SntCK0eDyKTgu2UGahvJOExIOmz\nV2MBJXxAdSBgKp+3WGNgMVtG1BX5bkh89faUXcRJxnbpWbfBdgWZUzGGD1qHBs8x\nfI6ZXHORDT45SuXYJ8BeHXIo3/E/ZS5O/Kpp/OluODTyETx0xaWTOHYobG50nj6R\nE3tIoJUhAoGBANNcCc/996Mee/RIpiwITndgzIX5RMzvfa3GDzVJ+yRLlW2aHWP1\nKtJcLIV3+z1wCwNUqB5OG73k8tNhpKDmofrr54O8G+91DJjjz8rqclgzodJ1G13M\n44/74EYYxRFkqg1N1OH3PJda5/0YF76PjKnTKRdxDbDu6fyAvYRS0uLLAoGBAPta\nlQFjB/G94isxJi8AkxbEqFOP8UGnI4RGl0vA+1dKP08zJ+ltUWho3dkpMaRVuSmZ\nv9ezs7rxvhRjRHuezv7rzIBOfkWfeQbdnHDRb8FhJifnrcjNFnHIq75a80EbeWQ/\nN30XIZEYw7b+Rr2mp/jrIY7E1eKyPZKsLeiCBc4lAoGBAINdmCezJOA4iTg6kzWY\n8BQYkOXQGSf6zjVcfYVUdwiHBdf6Srwe3D+k1HMcMIZuBhpK2rcDOxDapOYmsSjk\nT9biGqHxH7fEG1FHfpYTA4C4jqJ88MZrGyEZnrpSmOGHnH3qWx8bCIjWEoxnFhL1\nq6q9uLN+K9FFnR64cZI13CbjAoGBAPEbHc2bwhYYj+fgmIEDqxRvBgxKCiFxAzey\nQxTug+pilUISjxlxvGJMHWpfAnhhpmEKU6TEgwYzN6L06c8vMd4EMEFvid6dL4nv\ncE4kCHBWETS8Hs58NChnVp8dPTPZ9+K6ZS6/znoRaEOTvCXVxFCYs7Lwiz6OvVOB\nh/P9LTZlAoGAPgBdARWqaoDa1WuMtd+/SGuqIMawg1LWk+lRHPvj/xTEAseldgvh\nscmSwvzJd+l/Da7wOn44hSymMZbpbfChl0GSIIUvVigLJlYGRqWW+fIPa0OlMbsg\nReTzf4jHAP/nYyZBzzZLdpBIfKop3A/aWkEfdQOD8XC2t/4ZrXWiAko=\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "67:d2:c4:76:3f:de:78:29:59:12:d3:00:4a:71:b4:3b",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPhgcAF/ZVhXr6JJJqeYZtnPWKv5nwf/ZcEFLgdNJIk5hPe4JSBu+glFpF1W6ywCJsdH/JJIfsBz1J+4TXyGI+7/K5Z4kkep+F5H6Lgtc+E7+3FVqX40dXZ6IUsoADHEyRDrwqhZcSnFtSBFlPMln6sc759CBxA0AjHLHljnzq/xX1LdLPvbUeqA2TW76GtPVPTCMAsfGcDFTs4xSUGMHB65YcyUPA/X4yyvrvsaGMHSy1w7oK3hcCZZnVHQ9hDm1tx+wePNXZs+7M4xSzUoCr00mi9BlDYpyV02WICPvgC7fYBnNfy8XhzBOEIRwyvhr8IC6QleU9o0Qfywcu8SFX\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz4YHABf2VYV6+iSSanmG\nbZz1ir+Z8H/2XBBS4HTSSJOYT3uCUgbvoJRaRdVussAibHR/ySSH7Ac9SfuE18hi\nPu/yuWeJJHqfheR+i4LXPhO/txVal+NHV2eiFLKAAxxMkQ68KoWXEpxbUgRZTzJZ\n+rHO+fQgcQNAIxyx5Y586v8V9S3Sz721HqgNk1u+hrT1T0wjALHxnAxU7OMUlBjB\nweuWHMlDwP1+Msr677GhjB0stcO6Ct4XAmWZ1R0PYQ5tbcfsHjzV2bPuzOMUs1KA\nq9NJovQZQ2KcldNliAj74Au32AZzX8vF4cwThCEcMr4a/CAukJXlPaNEH8sHLvEh\nVwIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQKhxYrtlLN1BJfvE1b9L1iTANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjExMDI0MDkwODA0WhcNMjQxMDIzMDkwODA0WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDeBat7Aumyxi9oc5sPtsAWER8/\nCHUPeky6h1lEMBzhrV8UM8ogasAe3tGLqVke/QfHtOI08qFBzC9HphBsIHcDkWYS\ntYIlSbBHOf/PvB9oXAotP10Rt+Taph50lY/hNiHLXOgpQspZ9sb3DlyUSDF1XJJx\nP/1I2xvzTnKBaMJ5ZgiCdGl0tf5g1xK7FcXaD8DNsau9fGOj2RewMdnYoGdaJMwB\nhYm9x7OGIcLML9phNhrwSCdvTtI5n0+02Qu546rO8LQUevgqtPQzzceGKgL14JbN\n8hzygktjzoe3DbisJM80gu8pqWNs0H4sR1sua6z6QuKx+EZBuuTyYQ072sW5AgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTX/AS2si5dfYMXAKfHx9YyEUFXWDANBgkqhkiG9w0BAQsFAAOCAQEAykrlWaDk\nehbbxYHCr5ZZNkba74zoIxdxyOuEb0RTncoV8WrUFwWA9ezm3dWz+mrIr+QQeGn/\nLswUUb/Z+Rom4OrxLhPp0nMMpivqnCGL3KgC/nzfn+QKNEWVVmttMOgKz8Ib7BgX\ndt2EORpF+50iG3P0eXgz16yALPOD/nsgWuf0kT/EQX0l/cCyCT1YP+vMy1NCM4pq\n5OAuUcXUKEmdBIkfkBNELvaBqQ7R4007Wz81XGbdeu1eTctFc9yIjOOD3nHOiMvo\n/jeGFhs3+X6GNe1YwmCTA3G7GLYpRZWUEu4FX2AFCa6kBFOoLDv4dLlG7fXXpAfa\nx6rK0ieHNk39FA==\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 8760,
            "id": "55974758840000018443445795316030436745",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "d74e287116bbb67f508498a1cbd743dafe33d841",
            "ready_for_renewal": false,
            "set_subject_key_id": null,
            "subject": [
              {
                "common_name": "Example Inc. Root",
                "country": "US",
                "locality": "The Intranet",
                "organization": "Example, Inc",
                "organizational_unit": "Department of Certificate Authority",
                "postal_code": "95559-1227",
                "province": "CA",
                "serial_number": "",
                "street_address": [
                  "123 Example Street"
                ]
              }
            ],
            "uris": null,
            "validity_end_time": "2024-10-23T10:08:04.2255598+01:00",
            "validity_period_hours": 26280,
            "validity_start_time": "2021-10-24T10:08:04.2255598+01:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.module.cluster.tls_private_key.root"
          ]
        }
      ]
    }
  ]
}
